From this point forward, this will be our place to timestamp and schedule progress to be made,
as well as completed segments.
For the sake of simplicity I won't go back through everything that's already done, 
we'll just start here and now.

WEEK OF 11/30:

Monday: success
    -I'm still tired, Beau's reading the code, and Ryan is busy. nothing today but this list
        - finished ^

Tuesday: success
    -11 new milutin frames for sitting and standing
        -actually did come out to about 11, finished ^
    -work out the code for controls override while still standing up (should be easy)
        -was not easy, null let me down but good to know: remove() does not null a var finished ^

Wednesday:
    -11 new milutin frames for trip and stand
    -code for trip and stand (one timer and animation as well as a counter similar to comboTimer, simple)

Thursday:
    -detection of q as input and creating conditionals for curAbil, first winan
    -create winan projectiles and shooting frames
    -code projectile movement and collision detection with dummy, as well as destruction on collision
        +query: should the bullet dissipate if it doesn't collide within a certain distance?

Friday:
    -spawn hp pot collectible on map somewhere, adds 1 hp
        +add heart container on map somewhere that changes max health? should we worry about that yet? that won't be for a while
    *-make boots version of the walk cycle (going to basically double the file size :/)*
        --reconsider ^^

Saturday:
    -make bomb script, does damage in a radius after a timer to any object, player or scarecrow
    -create explosion/ destruction frames
    -add directional knockback for milutin

Sunday:
    -add dash function if boots
    -make dash frames, only like 6 for each side, 2 to start, 2 during, 2 to end (kickoff, flight, landing)
    *-make fade in and out of black for smooth transitions (tiled black scales across the screen that tween between alpha 0 and 1)*
        -finished ^
    -add game over frames (probably only to the side for dramatic effect) then fade to black
    *-make fade in for map loading so the first time the update function loads it overrides all motion and fades out of black (0.5 seconds)*
        -finished ^
        
        
        
        
        
Coding environment setup:
    Download VS Code from their site:
    - run the setup, check every box, its a microsoft program, there's no addons or viruses
    Download git from their site:
    - run the setup, one specific page has a whole bunch of folder options and stuff, don't even look at it just click next, 
      you basically don't have to click anything on the git setup
      
    Open VS code:
    - under file at the top left, hit open new folder, and select the documents folder of the computer
    - press *ctrl + shift + p*
    - in the search bar type terminal and find "terminal: select default shell"
    - click it, and click git bash terminal in the drop down menu it creates
    
    -now click the x and warning sign in the bottom left corner of the screen, this will pull up a bottom bar of "problems", "output", "terminal", and "debug"
    click terminal if you aren't already there
    - type "git clone https://github.com/WardenclyffeGame/wardenclyffegame.github.io"
    
    - while that's pulling, go to the left sidebar of the screen and hit the symbol with the 3 blocks and one to the side (extensions)
    - type "live serve" and install the plugin the comes up "live server" it has a purple radio signal as its page logo
    - if you want it, type "fold unfold" and install the plugin called "fold/ unfold icone" I know it's misspelled, but it just adds a handy function at the bottom
    
    -adding your github account to vs code:
        - *git config --global user.name ""*
        - *git config --global user.email ""*

    -now, hit file and open new folder again, this time open the folder you cloned, wardenclyffegame.github.io
    -you are now ready to work
    
To open a live server:
    - open the index.html file in vs code, and hit "go live" in the bottom right of the screen, it will automatically open a live tab in your default browser
    
To push any changes made:
    - make sure every file is saved (ctrl + s), 
      you can tell if a file is saved because if there are unsaved changes there will be a white dot next to the name of the file at the top
      
    - *git add -A*
    - *git commit -m ""* 
      (you have to enter a message or it won't commit for you, let's try to stay real with our messages, 
         but i understand if you're frustrated and just want to type some screams) 
    - *git push*
    
    note: if this is your first time pushing on this computer, it will show a pop up to bring you to your browser and sign in officially
          this should only happen once per computer however so no worries. and if it says it cannot redirect you when you sign in, don't worry about it
          VS code doesn't care about the school restrictions and so long as you confirm your account it will push.
